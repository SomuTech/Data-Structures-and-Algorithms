# -*- coding: utf-8 -*-
"""CancerPred.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p0nOjeuh_x5puFrLmUXXMbEhokCvmnrv
"""

import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report, confusion_matrix
import numpy as np

df = pd.read_csv('data.csv').iloc[:, :-1]
data = df.iloc[:, 2:]
target = df['diagnosis']
target_to_num = pd.get_dummies(target)['M']
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)
data_scaled = pd.DataFrame(data_scaled)
data_scaled_drop = data_scaled.drop(data_scaled.columns[[2, 3, 12, 13, 22, 23]], axis=1)
pca = PCA(n_components=0.95)
data_pca = pca.fit_transform(data_scaled_drop)
data_pca = pd.DataFrame(data_pca)
diag = df.iloc[:, 1:2]
data_target = pd.DataFrame(np.hstack([data_pca, diag.values]))
X = (data_target.iloc[:, :11]).values
data_train, data_test, target_train, target_test = train_test_split(X, target, test_size=0.25, random_state=0)
svc = SVC()
svc.fit(data_train, target_train)
target_pred_svc = svc.predict(data_test)
cm = confusion_matrix(target_test, target_pred_svc)
print("Confusion matrix:\n", cm)
crreport = classification_report(target_test, target_pred_svc)
print("Classification report:\n", crreport)