"""Cancer Prediction """

import pandas as pd, numpy as np
#for data visualization
import seaborn as sns 
import matplotlib.pyplot as plt
#for PCA (feature engineering)
from sklearn.decomposition import PCA
#for data scaling
from sklearn.preprocessing import StandardScaler
#for splitting dataset
from sklearn.model_selection import train_test_split
#for fitting SVM model
from sklearn.svm import SVC
#for displaying evaluation metrics
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix

df=pd.read_csv('data.csv').iloc[:,:-1]

X = df.iloc[:,2:32]
y = df.diagnosis

y_num = pd.get_dummies(y)
y = y_num.M

X.corr()
plt.figure(figsize=(18, 12))
sns.heatmap(X.corr(), vmin=0.85, vmax=1, annot=True, cmap='YlGnBu', linewidths=.5)

#reducing the attributes in X dataframe
#1 scale the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

#2 drop the highly correlated columns which are not useful i.e., area, perimeter, perimeter_worst, area_worst, perimeter_se, area_se 
X_scaled = pd.DataFrame(X_scaled)
correlation=X_scaled.columns[[2, 3, 12, 13, 22, 23]]
X_scaled_drop = X_scaled.drop(correlation, axis=1)

#3 apply PCA on scaled data
pca = PCA(n_components=0.95)
x_pca = pca.fit_transform(X_scaled_drop)
x_pca = pd.DataFrame(x_pca)

colnames = ['PC1','PC2','PC3','PC4','PC5','PC6','PC7','PC8','PC9','PC10','PC11','diagnosis']
diag = df.iloc[:,1:2]
Xy = pd.DataFrame(np.hstack([x_pca,diag.values]),columns=colnames)

X=(Xy.iloc[:,0:11]).values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

svc = SVC()
svc.fit(X_train, y_train)

y_pred_svc =svc.predict(X_test)
cm = confusion_matrix(y_test, y_pred_svc)

creport = classification_report(y_test, y_pred_svc)
print(creport)

"""
OUTPUT:

precision    recall  f1-score   support

           0       0.96      0.99      0.97        90
           1       0.98      0.92      0.95        53

    accuracy                           0.97       143
   macro avg       0.97      0.96      0.96       143
weighted avg       0.97      0.97      0.96       143

"""