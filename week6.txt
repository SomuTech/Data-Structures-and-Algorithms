"""Digit Recognization using ML"""
#import modules
import tensorflow as tf
import matplotlib.pyplot as plt
%matplotlib inline
import numpy as np
from tensorflow import keras
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten

# the data, split between train and test sets
(xtrain, ytrain), (xtest, ytest) = mnist.load_data()
print(xtrain.shape, ytrain.shape)

xtrain=xtrain/255
xtest=xtest/255

#rebuild the data
xtrainflat = xtrain.reshape(len(xtrain),28*28)
xtestflat = xtest.reshape(len(xtest),28*28)
plt.matshow(xtest[70])

#model the data
model = keras.Sequential([keras.layers.Dense(100,input_shape=(784,),activation='relu'),keras.layers.Dense(10,activation='softmax')])
model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])
model.fit(xtrainflat,ytrain,epochs=5)

#evaluate the data
model.evaluate(xtestflat,ytest)

#predict the output
ypredict= model.predict(xtestflat)
np.argmax(ypredict[70])

"""
OUTPUT:

#data shape
Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz
11493376/11490434 [==============================] - 0s 0us/step
11501568/11490434 [==============================] - 0s 0us/step
(60000, 28, 28) (60000,)

#training data
Epoch 1/5
1875/1875 [==============================] - 9s 4ms/step - loss: 0.2709 - accuracy: 0.9222
Epoch 2/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.1225 - accuracy: 0.9641
Epoch 3/5
1875/1875 [==============================] - 5s 2ms/step - loss: 0.0859 - accuracy: 0.9737
Epoch 4/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.0649 - accuracy: 0.9803
Epoch 5/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.0525 - accuracy: 0.9837
<keras.callbacks.History at 0x7f89ccc14f50>

#evaluation
313/313 [==============================] - 1s 2ms/step - loss: 0.0861 - accuracy: 0.9737
[0.08613469451665878, 0.9736999869346619]

#predicted output 
7

"""